(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{735:function(t,v,a){"use strict";a.r(v);var _=a(7),s=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"})]),t._v(" "),a("h2",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("p",[t._v("[TOC]")]),t._v(" "),a("h2",{attrs:{id:"援引自《mybatis笔记》"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#援引自《mybatis笔记》"}},[t._v("#")]),t._v(" 援引自《MyBatis笔记》")]),t._v(" "),a("p",[t._v("作为补充，查缺补漏，过一遍，记录一些知识点。")]),t._v(" "),a("h3",{attrs:{id:"首先-可以从mybatis的特性大致知道这个框架是干什么的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首先-可以从mybatis的特性大致知道这个框架是干什么的"}},[t._v("#")]),t._v(" 首先，可以从MyBatis的特性大致知道这个框架是干什么的？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架")])]),t._v(" "),a("li",[a("p",[t._v("MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集")])]),t._v(" "),a("li",[a("p",[t._v("MyBatis可以使用简单的XML或注解用于配置和原始映射，将接口和Java的POJO（Plain Old Java Objects，普通的Java对象）映射成数据库中的记录")])]),t._v(" "),a("li",[a("p",[t._v("MyBatis 是一个 半自动的ORM（Object Relation Mapping）框架")]),t._v(" "),a("blockquote",[a("p",[t._v("ORM框架：它的作用是在关系型数据库和对象之间作一个映射。这样，我们在进行具体的操作数据库的时候，就不需要再去和复杂的SQL语句打交道，只要像平时操作对象一样操作它就可以了。")])])])]),t._v(" "),a("h3",{attrs:{id:"为什么需要做持久化和orm设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要做持久化和orm设计"}},[t._v("#")]),t._v(" 为什么需要做持久化和ORM设计？")]),t._v(" "),a("p",[t._v("​\t\t一般系统开发采用MVC的分层开发模式。")]),t._v(" "),a("p",[t._v("​\t\tMVC 中的 Model 包含了复杂的业务逻辑和数据逻辑，以及数据存取机制，例如 JDBC的连接、SQL生成和Statement创建、还有ResultSet结果集的读取等等。"),a("u",[t._v("将这些复杂的业务逻辑和数据逻辑分离，可以使系统的紧耦合关系转化为松耦合关系，从而降低系统耦合度，这是持久化要做的工作")]),t._v("。")]),t._v(" "),a("p",[t._v("​\t\tMVC 模式实现了表现层（即View）和数据处理层（即Model）的分离和解耦，而"),a("u",[t._v("持久化的设计则实现了数据处理层内部的业务逻辑和数据逻辑分离的解耦合")]),t._v("。")]),t._v(" "),a("p",[t._v("​\t\t一般，"),a("u",[t._v("使用JDBC操作数据库，业务处理逻辑和数据存取逻辑是混杂在一起的")]),t._v("。一般的步骤如下所示：")]),t._v(" "),a("p",[t._v("1、建立数据库连接，获得 Connection 对象。\n2、根据用户的输入组装查询 SQL 语句。\n3、根据 SQL 语句建立 Statement 对象 或者 PreparedStatement 对象。\n4、用 Connection 对象执行 SQL语句，获得结果集 ResultSet 对象。\n5、然后一条一条读取结果集 ResultSet 对象中的数据。\n6、根据读取到的数据，按特定的业务逻辑进行计算。\n7、根据计算得到的结果再组装更新 SQL 语句。\n8、再使用 Connection 对象执行更新 SQL 语句，以更新数据库中的数据。\n7、最后依次关闭各个 Statement 对象和 Connection 对象。")]),t._v(" "),a("p",[t._v("由上面可以看到"),a("u",[t._v("JDBC的缺点")]),t._v("：其中的业务处理逻辑和数据存取逻辑完全混杂在一块。而一个完整的系统要包含成千上万个这样重复的而又混杂的处理过程，假如要对其中某些业务逻辑或者一些相关联的业务流程做修改，要改动的代码量将不可想象。")]),t._v(" "),a("p",[a("u",[t._v("所以")]),t._v("：就要将一样的处理代码即业务逻辑和可能不一样的处理即数据存取逻辑分离开来，另一方面，关系型数据库中的数据基本都是以一行行的数据进行存取的，而程序运行却是一个个对象进行处理，而目前大部分数据库驱动技术（如ADO.NET、JDBC、ODBC等等）均是以行集的结果集一条条进行处理的。所以为解决 这一困难，就出现 ORM 这一个对象和数据之间映射技术。")]),t._v(" "),a("h3",{attrs:{id:"mybatis能干什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis能干什么"}},[t._v("#")]),t._v(" MyBatis能干什么？")]),t._v(" "),a("p",[t._v("首先介绍一下传统的JDBC编程：")]),t._v(" "),a("p",[t._v("1、使用JDBC编程需要链接数据库，注册驱动和数据库信息。\n2、操作Connection，打开Statement对象。\n3、通过Statement执行SQL语句，返回结果放到ResultSet对象。\n4、使用ResultSet读取数据。\n5、关闭数据库相关的资源。")]),t._v(" "),a("p",[a("u",[t._v("使用传统的JDBC方式存在一些弊端")]),t._v("：")]),t._v(" "),a("p",[t._v("(1) 工作量比较大，我们需要建立连接，然后处理JDBC底层业务，处理数据类型。我们还需要处理Connection对象，Statement对象和Result对象去拿数据，并关闭它们。")]),t._v(" "),a("p",[t._v("(2) 我们对JDBC编程处理的异常进行捕获处理并正确的关闭资源。")]),t._v(" "),a("p",[t._v("而"),a("u",[t._v("MyBatis的实现原理就是对JDBC进行了封装，将相应的接口留给了程序员")]),t._v("。只要程序员在配置文件中配置中填写自己的数据库类型，数据库，数据表，用户名，密码，相应的SQL语句，省去了创建连接，创建Statement对象和Result对象大大的提高了代码复用性。")]),t._v(" "),a("p",[t._v("流程图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://www.mybatis.cn/usr/uploads/2019/09/1225315115.png",alt:"mybatis-inner.png"}})]),t._v(" "),a("p",[a("strong",[t._v("MyBatis的优点")]),t._v("：")]),t._v(" "),a("p",[a("u",[t._v("Mybatis避免了几乎所有的JDBC代码和手动设置参数以获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录")]),t._v("。")]),t._v(" "),a("p",[t._v("（1）优化获取和释放")]),t._v(" "),a("p",[t._v("​\t\t我们一般在访问数据库时都是通过数据库连接池来操作数据库，数据库连接池有好几种，比如C3P0、DBCP，也可能采用容器本身的JNDI数据库连接池。")]),t._v(" "),a("p",[t._v("（2）SQL统一管理，对数据库进行存取操作")]),t._v(" "),a("p",[t._v("​\t\t我们"),a("u",[t._v("使用JDBC对数据库进行操作时，SQL查询语句分布在各个Java类中，这样可读性差")]),t._v("，不利于维护，当我们修改Java类中的SQL语句时要重新进行编译。"),a("u",[t._v("Mybatis可以把SQL语句放在配置文件中统一进行管理，以后修改配置文件")]),t._v("，也不需要重新就行编译部署。")]),t._v(" "),a("p",[t._v("（3）生成动态SQL语句")]),t._v(" "),a("p",[t._v("​\t\t我们在查询中可能需要根据一些属性进行组合查询，比如我们进行商品查询，我们可以根据商品名称进行查询，也可以根据发货地进行查询，或者两者组合查询。"),a("u",[t._v("如果使用JDBC进行查询，这样就需要写多条SQL语句")]),t._v("。"),a("u",[t._v("Mybatis可以在配置文件中通过使用"),a("if",{attrs:{test:""}}),t._v("标签进行SQL语句的拼接，生成动态SQL语句")],1),t._v("(即它的动态SQL功能)。")]),t._v(" "),a("p",[t._v("（4）能够对结果集进行映射")]),t._v(" "),a("p",[t._v("​\t\t我们在"),a("u",[t._v("使用JDBC进行查询时，返回一个结果集ResultSet，我们要从结果集中取出结果封装为需要的类型")]),t._v("。在Mybatis中，我们可以设置将结果直接映射为自己需要的类型，比如：JavaBean对象、一个Map、一个List等等。")]),t._v(" "),a("h3",{attrs:{id:"和其他持久层框架的一个对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和其他持久层框架的一个对比"}},[t._v("#")]),t._v(" 和其他持久层框架的一个对比")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("JDBC")])]),t._v(" "),a("ul",[a("li",[t._v("SQL 夹杂在Java代码中耦合度高，导致硬编码内伤")]),t._v(" "),a("li",[t._v("维护不易且实际开发需求中 SQL 有变化，频繁修改的情况多见")]),t._v(" "),a("li",[t._v("代码冗长，开发效率低")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("MyBatis")])]),t._v(" "),a("ul",[a("li",[t._v("轻量级，性能出色。")]),t._v(" "),a("li",[a("u",[t._v("SQL和Java编码分开，功能边界清晰。Java代码专注业务、SQL语句专注数据")])]),t._v(" "),a("li",[t._v("开发效率稍逊于HIbernate，但是完全能够接受")])])])]),t._v(" "),a("h3",{attrs:{id:"搭建mybatis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搭建mybatis"}},[t._v("#")]),t._v(" 搭建MyBatis")]),t._v(" "),a("p",[a("mark",[t._v("+++++++++++++++++++++++++++++++++++++++++++")])]),t._v(" "),a("p",[t._v("MyBatis的映射文件：")]),t._v(" "),a("ul",[a("li",[t._v("一个映射文件对应一个实体类，对应一张表的操作")]),t._v(" "),a("li",[t._v("MyBatis映射文件用于编写SQL，访问以及操作表中的数据")]),t._v(" "),a("li")]),t._v(" "),a("h3",{attrs:{id:"mybatis获取参数值的两种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis获取参数值的两种方式"}},[t._v("#")]),t._v(" Mybatis获取参数值的两种方式")]),t._v(" "),a("p",[a("mark",[t._v("+++++++++++++++++++++++++++++++++++++++++++")])])])}),[],!1,null,null,null);v.default=s.exports}}]);