(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{756:function(s,a,e){"use strict";e.r(a);var n=e(7),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("blockquote",[e("p",[s._v("外键：")]),s._v(" "),e("p",[s._v("一个逻辑，一张表引用了另外一张表。")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("概念：")]),s._v(" "),e("ul",[e("li",[e("u",[s._v("如果公共关键字在一个关系中是主关键字，那么这个公共关键字被称为另一个关系的外键")]),s._v("。")]),s._v(" "),e("li",[s._v("外键表示了两个关系之间的相关联系。以另一个关系的外键作主关键字的表被称为"),e("strong",[s._v("主表")]),s._v("，具有此外键的表被称为主表的"),e("strong",[s._v("从表")]),s._v("。")]),s._v(" "),e("li",[s._v("在实际操作中，将一个表的值放入第二个表来表示关联，所使用的值是第一个表的主键值(在必要时可包括复合主键值)。此时，第二个表中保存这些值的属性称为外键("),e("strong",[s._v("foreign key")]),s._v(")。")])])]),s._v(" "),e("li",[e("p",[s._v("外键作用：")]),s._v(" "),e("p",[s._v("保持数据"),e("strong",[s._v("一致性")]),s._v("，"),e("strong",[s._v("完整性")]),s._v("，主要目的是控制存储在外键表中的数据,"),e("strong",[s._v("约束")]),s._v("。使两张表形成关联，外键只能引用外表中的列的值或使用空值。")])]),s._v(" "),e("li",[e("p",[s._v("创建外键：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("建表时指定外键约束（方式一，较为麻烦复杂）：")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("-- 创建外键的方式一 : 创建子表同时创建外键\n\n-- 年级表 (id\\年级名称)\nCREATE TABLE `grade` (\n`gradeid` INT(10) NOT NULL AUTO_INCREMENT COMMENT '年级ID',\n`gradename` VARCHAR(50) NOT NULL COMMENT '年级名称',\nPRIMARY KEY (`gradeid`)\n) ENGINE=INNODB DEFAULT CHARSET=utf8\n\n-- 学生信息表 (学号,姓名,性别,年级,手机,地址,出生日期,邮箱,身份证号)\nCREATE TABLE `student` (\n    `studentno` INT(4) NOT NULL COMMENT '学号',\n    `studentname` VARCHAR(20) NOT NULL DEFAULT '匿名' COMMENT '姓名',\n    `sex` TINYINT(1) DEFAULT '1' COMMENT '性别',\n    `gradeid` INT(10) DEFAULT NULL COMMENT '年级',\n    `phoneNum` VARCHAR(50) NOT NULL COMMENT '手机',\n    `address` VARCHAR(255) DEFAULT NULL COMMENT '地址',\n    `borndate` DATETIME DEFAULT NULL COMMENT '生日',\n    `email` VARCHAR(50) DEFAULT NULL COMMENT '邮箱',\n    `idCard` VARCHAR(18) DEFAULT NULL COMMENT '身份证号',\n    PRIMARY KEY (`studentno`),\n    KEY `FK_gradeid` (`gradeid`),\n    CONSTRAINT `FK_gradeid` FOREIGN KEY (`gradeid`) REFERENCES `grade` (`gradeid`)  -- 添加这个为外键，且引用到grade表的gradeid字段\n) ENGINE=INNODB DEFAULT CHARSET=utf8\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("建表后修改（方式二：）：")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("-- 创建外键方式二 : 创建子表完毕后,修改子表添加外键\nALTER TABLE `student`\nADD CONSTRAINT `FK_gradeid` FOREIGN KEY (`gradeid`) REFERENCES `grade` (`gradeid`);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])])]),s._v(" "),e("li",[e("p",[s._v("删除外键：")]),s._v(" "),e("p",[s._v("注意："),e("u",[s._v("删除具有主外键关系的表时 , 要先删子表 , 后删主表")])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("-- 删除外键\nALTER TABLE student DROP FOREIGN KEY FK_gradeid;\n-- 发现执行完上面的,索引还在,所以还要删除索引\n-- 注:这个索引是建立外键的时候默认生成的\nALTER TABLE student DROP INDEX FK_gradeid;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("u",[s._v("以上操作的都是物理外键，数据库级别的外键，我们不建议使用（避免数据库过多造成困扰）")]),s._v("。（了解即可）。")])])]),s._v(" "),e("p",[e("strong",[s._v("最佳实践")]),s._v("：")]),s._v(" "),e("ul",[e("li",[s._v("数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段）")]),s._v(" "),e("li",[s._v("我们想使用多张表的数据，想使用外键，就用程序去实现。")])]),s._v(" "),e("blockquote",[e("p",[s._v("DML语言（"),e("mark",[s._v("重点，记住")]),s._v("）")])]),s._v(" "),e("ul",[e("li",[s._v("DML语言，也就是数据操作语言，它用于操作数据库对象中所包含的数据。")]),s._v(" "),e("li",[s._v("DML语言包括：\n"),e("ul",[e("li",[s._v("INSERT (添加数据语句)")]),s._v(" "),e("li",[s._v("UPDATE (更新数据语句)")]),s._v(" "),e("li",[s._v("DELETE (删除数据语句)")])])])]),s._v(" "),e("blockquote",[e("p",[s._v("添加")])]),s._v(" "),e("p",[s._v("语法：")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("INSERT INTO 表名[(字段1,字段2,字段3,...)] VALUES('值1','值2','值3')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("INSERT INTO `grade`(`gradename`) VALUES('大四','一')；\nINSERT INTO `student`(`studentname`,`pwd`) VALUES ('张三','aaaa')\n-- 一次插入多条数据\nINSERT INTO grade(gradename) VALUES ('大三'),('大四');\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ul",[e("li",[s._v("字段或值之间用英文逗号隔开 .")]),s._v(" "),e("li",[s._v("' 字段1,字段2...' 该部分可省略 , 但添加的值务必与表结构,数据列,顺序相对应,且数量一致 .")]),s._v(" "),e("li",[s._v("可同时插入多条数据 , values 后用英文逗号隔开")])]),s._v(" "),e("blockquote",[e("p",[s._v("修改")])]),s._v(" "),e("p",[s._v("语法：")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("UPDATE 表名 SET column_name=value,column_name2=value2,...] [WHERE condition];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("UPDATE `grade` SET `gradename`='大五' WHERE gradeid= 7;\n-- 修改多个信息，逗号隔开即可\nUPDATE `grade` SET `gradename`='大五',`email`='2121@qq.com' WHERE gradeid= 7;\n-- 不指定条件的情况下，会改动所有的表\nUPDATE `grade` SET `gradename`='大五';\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("ul",[e("li",[s._v("column_name 为要更改的数据列")]),s._v(" "),e("li",[s._v("value 为修改后的数据 , "),e("u",[s._v("可以为变量 , 具体指 , 表达式或者嵌套的SELECT结果")])]),s._v(" "),e("li",[s._v("condition 为筛选条件 , 如不指定则修改该表的所有列数据")]),s._v(" "),e("li",[s._v("多个设置的属性之间，使用英文逗号隔开")])]),s._v(" "),e("p",[s._v("where子句：")]),s._v(" "),e("ul",[e("li",[s._v("有条件地在表中筛选数据")]),s._v(" "),e("li",[s._v("where子句中间用到的运算符：\n"),e("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220305145338039.png",alt:"image-20220305145338039"}})])]),s._v(" "),e("blockquote",[e("p",[s._v("删除")])]),s._v(" "),e("p",[s._v("delete语法：")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("DELETE FROM 表名 [WHERE condition];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("DELETE FROM grade WHERE gradeid = 5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("condition为筛选条件 , 如不指定则删除该表的所有列数据")])]),s._v(" "),e("p",[s._v("truncate语法：")]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("TRUNCATE [TABLE] table_name;\n-- 清空年级表\nTRUNCATE grade\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("完全清空表数据，但表结构 , 索引 , 约束等不变 ;")])]),s._v(" "),e("p",[s._v("delete和truncate语法联系和区别：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("相同 : 都能删除数据 , 不删除表结构 , 但TRUNCATE速度更快")])]),s._v(" "),e("li",[e("p",[s._v("不同 :")])]),s._v(" "),e("li",[e("ul",[e("li",[s._v("使用TRUNCATE TABLE 重新设置AUTO_INCREMENT计数器")]),s._v(" "),e("li",[s._v("使用TRUNCATE TABLE不会对事务有影响 （事务后面会说）")])])]),s._v(" "),e("li",[e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("-- 同样使用DELETE清空不同引擎的数据库表数据.重启数据库服务后\n-- InnoDB : 自增列从初始值重新开始 (因为是存储在内存中,断电即失)\n-- MyISAM : 自增列依然从上一个自增数据基础上开始 (存在文件中,不会丢失)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])]),s._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("CREATE TABLE `test`(\n`id` INT(4) NOT NULL AUTO_INCREMENT,\n`coll` VARCHAR(20) NOT NULL,\nPRIMARY KEY (`id`)\n);\nINSERT INTO `test`(`coll`) VALUES('1'),('2');\n-- delete from `test`; -- 不会影响自增\n-- truncate table `test`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);