(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{649:function(_,v,l){"use strict";l.r(v);var i=l(7),t=Object(i.a)({},(function(){var _=this,v=_.$createElement,l=_._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("div",{staticClass:"custom-block tip"},[l("p",{staticClass:"title"}),l("p",[_._v("这大类主要包括：")]),_._v(" "),l("ol",[l("li",[_._v("数据结构与算法各部分内容")]),_._v(" "),l("li",[_._v("每日刷题，总结整理")]),_._v(" "),l("li",[_._v("心得，总结，面经")])]),_._v(" "),l("p",[_._v("以下是用到的参考资料。")])]),_._v(" "),l("h2",{attrs:{id:"参考资料"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[_._v("#")]),_._v(" 参考资料")]),_._v(" "),l("h3",{attrs:{id:"_1-《趣学算法》"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-《趣学算法》"}},[_._v("#")]),_._v(" 1.《趣学算法》")]),_._v(" "),l("blockquote",[l("p",[_._v("算法参考")])]),_._v(" "),l("ul",[l("li",[_._v("贪心算法")]),_._v(" "),l("li",[_._v("分治法")]),_._v(" "),l("li",[_._v("动态规划")]),_._v(" "),l("li",[_._v("回溯法")]),_._v(" "),l("li",[_._v("分支限界法")]),_._v(" "),l("li",[_._v("线性规划网络流")])]),_._v(" "),l("h3",{attrs:{id:"_2-《大话数据结构》c"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2-《大话数据结构》c"}},[_._v("#")]),_._v(" 2.《大话数据结构》C++")]),_._v(" "),l("blockquote",[l("p",[_._v("数据结构参考，代码另找")])]),_._v(" "),l("ul",[l("li",[_._v("线性结构\n"),l("ul",[l("li",[_._v("顺序存储结构，插入与删除，")]),_._v(" "),l("li",[_._v("链式存储结构")]),_._v(" "),l("li",[_._v("单链表的读取，插入与删除，整表创建，整表删除，")]),_._v(" "),l("li",[_._v("静态链表")]),_._v(" "),l("li",[_._v("循环聊表")]),_._v(" "),l("li",[_._v("双向链表")])])]),_._v(" "),l("li",[_._v("栈与队列\n"),l("ul",[l("li",[_._v("栈的顺序存储结构")]),_._v(" "),l("li",[_._v("栈的链式存储结构")]),_._v(" "),l("li",[_._v("栈的应用-递归")]),_._v(" "),l("li",[_._v("循环队列")]),_._v(" "),l("li",[_._v("队列的链式存储结构及实现")])])]),_._v(" "),l("li",[_._v("字符串\n"),l("ul",[l("li",[_._v("朴素的模式匹配算法")]),_._v(" "),l("li",[_._v("KMP模式匹配算法")])])]),_._v(" "),l("li",[_._v("树\n"),l("ul",[l("li",[_._v("二叉树")]),_._v(" "),l("li",[_._v("遍历二叉树")]),_._v(" "),l("li",[_._v("线索二叉树")]),_._v(" "),l("li",[_._v("赫夫曼树")])])]),_._v(" "),l("li",[_._v("图")]),_._v(" "),l("li",[_._v("查找\n"),l("ul",[l("li",[_._v("二叉排序树")]),_._v(" "),l("li",[_._v("平衡二叉树（AVL树）")]),_._v(" "),l("li",[_._v("多路查找树（B树）")]),_._v(" "),l("li",[_._v("散列表查找（哈希表）")])])]),_._v(" "),l("li",[_._v("排序\n"),l("ul",[l("li",[_._v("冒泡排序")]),_._v(" "),l("li",[_._v("简单选择排序")]),_._v(" "),l("li",[_._v("直接插入排序")]),_._v(" "),l("li",[_._v("希尔排序")]),_._v(" "),l("li",[_._v("堆排序")]),_._v(" "),l("li",[_._v("归并排序")]),_._v(" "),l("li",[_._v("快速排序")])])])]),_._v(" "),l("h3",{attrs:{id:"_3-《数据结构与算法-java语言描述》"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_3-《数据结构与算法-java语言描述》"}},[_._v("#")]),_._v(" 3.《数据结构与算法-Java语言描述》")]),_._v(" "),l("blockquote",[l("p",[_._v("综合数据结构与算法")])]),_._v(" "),l("ul",[l("li",[_._v("表，栈，队列")]),_._v(" "),l("li",[_._v("树")]),_._v(" "),l("li",[_._v("散列")]),_._v(" "),l("li",[_._v("优先队列（堆）")]),_._v(" "),l("li",[_._v("排序")]),_._v(" "),l("li",[_._v("不相交集类")]),_._v(" "),l("li",[_._v("图论算法")]),_._v(" "),l("li",[_._v("算法设计技巧\n"),l("ul",[l("li",[_._v("贪婪算法")]),_._v(" "),l("li",[_._v("分治算法")]),_._v(" "),l("li",[_._v("动态规划")]),_._v(" "),l("li",[_._v("随机化算法")]),_._v(" "),l("li",[_._v("回溯算法")])])]),_._v(" "),l("li",[_._v("高级数据结构及其实现")])]),_._v(" "),l("h3",{attrs:{id:"_4-《剑指offer》"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_4-《剑指offer》"}},[_._v("#")]),_._v(" 4.《剑指offer》")]),_._v(" "),l("blockquote",[l("p",[_._v("题目参考")])]),_._v(" "),l("ul",[l("li",[_._v("——")])]),_._v(" "),l("h3",{attrs:{id:"_5-《视频-尚硅谷韩顺平》"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_5-《视频-尚硅谷韩顺平》"}},[_._v("#")]),_._v(" 5. "),l("mark",[_._v("《视频：尚硅谷韩顺平》")])]),_._v(" "),l("p",[l("strong",[_._v("资源")]),_._v("：")]),_._v(" "),l("p",[l("a",{attrs:{href:"F:%5C%E5%AD%A6%E4%B9%A0%5C%E5%90%8E%E7%AB%AF_resource%5CDataStructure&Algorithms%5C%E7%AC%94%E8%AE%B0%E3%80%81%E4%BB%A3%E7%A0%81%E3%80%81%E8%AF%BE%E4%BB%B6%E3%80%81%E8%B5%84%E6%96%99%5C%E7%AC%94%E8%AE%B0%5C%E5%B0%9A%E7%A1%85%E8%B0%B7_%E9%9F%A9%E9%A1%BA%E5%B9%B3_%E5%9B%BE%E8%A7%A3Java%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95.pdf"}},[_._v("视频笔记本地文件")])]),_._v(" "),l("p",[l("strong",[_._v("数据结构")]),_._v("：")]),_._v(" "),l("ul",[l("li",[_._v("线性结构与非线性结构")]),_._v(" "),l("li",[_._v("数组")]),_._v(" "),l("li",[_._v("队列")]),_._v(" "),l("li",[_._v("链表")]),_._v(" "),l("li",[_._v("栈")]),_._v(" "),l("li",[_._v("图")])]),_._v(" "),l("p",[l("strong",[_._v("算法")]),_._v("：")]),_._v(" "),l("ul",[l("li",[l("p",[_._v("递归")])]),_._v(" "),l("li",[l("p",[_._v("排序")])]),_._v(" "),l("li",[l("p",[_._v("查找")])]),_._v(" "),l("li",[l("p",[_._v("哈希表")])]),_._v(" "),l("li",[l("p",[_._v("树的基础部分(二叉树，顺序存储二叉树)")])]),_._v(" "),l("li",[l("p",[_._v("树结构实际应用(堆排序，赫夫曼树，二叉排序树，平衡二叉树)")])]),_._v(" "),l("li",[l("p",[_._v("多路查找树(二叉树与B树，2-3树，B树，B+树和B*树)")])]),_._v(" "),l("li",[l("p",[_._v("图的深度优先遍历和广度优先遍历")])]),_._v(" "),l("li",[l("p",[_._v("常用的10种算法(二分查找非递归，分治，动态规划，KMP，贪心，普利姆，克鲁斯卡尔，迪杰斯特拉，弗洛伊德，马踏棋盘)")])])]),_._v(" "),l("h3",{attrs:{id:"_6-《视频-左程云》"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_6-《视频-左程云》"}},[_._v("#")]),_._v(" 6.《视频：左程云》")]),_._v(" "),l("p",[l("strong",[_._v("资源")]),_._v("：")]),_._v(" "),l("p",[l("a",{attrs:{href:"https://github.com/algorithmzuo",target:"_blank",rel:"noopener noreferrer"}},[_._v("左程云github仓库"),l("OutboundLink")],1)]),_._v(" "),l("p",[l("a",{attrs:{href:"http://live.lstblog.com/resourses/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AF%BE%E7%A8%8B%E5%86%85%E5%AE%B9%E5%85%A8%E6%A2%B3%E7%90%86.xmind",target:"_blank",rel:"noopener noreferrer"}},[_._v("视频的课程内容全梳理"),l("OutboundLink")],1)]),_._v(" "),l("p",[l("strong",[_._v("新手班")]),_._v(":")]),_._v(" "),l("p",[_._v("基础的一个预热，闲暇时间简单的过一遍，都是较为基础的知识。")]),_._v(" "),l("p",[l("strong",[_._v("体系班(重点必学)")]),_._v(":")]),_._v(" "),l("blockquote",[l("p",[l("font",{staticStyle:{color:"red"}},[_._v("个人的感觉")]),_._v("：对于目前的我来说知识点有点杂乱，需要梳理一下。")],1),_._v(" "),l("p",[l("font",{staticStyle:{color:"red"}},[_._v("数据结构")]),_._v("：链表，栈，队列，哈希表，有序表，堆，二叉树，图，，")],1),_._v(" "),l("p",[l("font",{staticStyle:{color:"red"}},[_._v("算法")]),_._v("：归并排序，快速排序，堆排序，计数排序，基数排序等排序算法；贪心算法；图相关算法；Dijkstra算法；递归；动态规划；")],1),_._v(" "),l("p",[l("font",{staticStyle:{color:"red"}},[_._v("其他没听过的")]),_._v("：并查集；加强堆；+23节以后的")],1)]),_._v(" "),l("p",[_._v("较为完善的体系。")]),_._v(" "),l("ol",[l("li",[_._v("时间/空间复杂度，对数器，二分法")]),_._v(" "),l("li",[_._v("异或运算、进一步认识对数器的重要性")]),_._v(" "),l("li",[_._v("单双链表、栈和队列、递归和Master公式、哈希表和有序表的使用和性能")]),_._v(" "),l("li",[_._v("归并排序及其常见面试题")]),_._v(" "),l("li",[_._v("归并排序面试题(续)、快速排序")]),_._v(" "),l("li",[_._v("比较器，堆结构，堆排序")]),_._v(" "),l("li",[_._v("和堆有关的面试题、加强堆结构")]),_._v(" "),l("li",[_._v("前缀树、不基于比较的排序（计数排序、基数排序）、排序算法的稳定性")]),_._v(" "),l("li",[_._v("排序算法大总结、链表及其相关面试题")]),_._v(" "),l("li",[_._v("链表相关面试题（续）、二叉树的常见遍历")]),_._v(" "),l("li",[_._v("二叉树常见面试题和二叉树的递归套路（上）")]),_._v(" "),l("li",[_._v("二叉树常见面试题和二叉树的递归套路（中）")]),_._v(" "),l("li",[_._v("二叉树常见面试题和二叉树的递归套路（下）、贪心算法")]),_._v(" "),l("li",[_._v("贪心算法（续）、并查集")]),_._v(" "),l("li",[_._v("并查集相关的常见面试题")]),_._v(" "),l("li",[_._v("图及其与图相关的算法")]),_._v(" "),l("li",[_._v("用加强堆更好的实现Dijkstra算法、常见的递归")]),_._v(" "),l("li",[_._v("暴力递归到动态规划（一）")]),_._v(" "),l("li",[_._v("暴力递归到动态规划（二）")]),_._v(" "),l("li",[_._v("暴力递归到动态规划（三）")]),_._v(" "),l("li",[_._v("暴力递归到动态规划（四）")]),_._v(" "),l("li",[_._v("暴力递归到动态规划（五）")]),_._v(" "),l("li",[_._v("暴力递归到动态规划（六）\n-------------------------------------------分界线----------------------------------------------")]),_._v(" "),l("li",[_._v("窗口内最大值或最小值的更新结构")]),_._v(" "),l("li",[_._v("单调栈")]),_._v(" "),l("li",[_._v("单调栈相关的题目（续）、斐波那契数列的矩阵快速幂模型")]),_._v(" "),l("li",[_._v("KMP算法")]),_._v(" "),l("li",[_._v("Manacher算法")]),_._v(" "),l("li",[_._v("在无序数组中找到第K小的数、蓄水池算法")]),_._v(" "),l("li",[_._v("二叉树的Morris遍历")]),_._v(" "),l("li",[_._v("线段树")]),_._v(" "),l("li",[_._v("IndexTree、AC自动机")]),_._v(" "),l("li",[_._v("与哈希函数有关的结构")]),_._v(" "),l("li",[_._v("资源限制类题目的解题套路")]),_._v(" "),l("li",[_._v("有序表（上）")]),_._v(" "),l("li",[_._v("有序表（中）")]),_._v(" "),l("li",[_._v("有序表（下）")]),_._v(" "),l("li",[_._v("根据对数器找规律、根据数据量猜解法")]),_._v(" "),l("li",[_._v("根据数据量猜解法（续）、分治技巧、卡特兰数")]),_._v(" "),l("li",[_._v("子数组达到规定累加和的最大长度系列问题、矩阵处理技巧题")]),_._v(" "),l("li",[_._v("四边形不等式技巧（上）")]),_._v(" "),l("li",[_._v("四边形不等式技巧（下）")]),_._v(" "),l("li",[_._v("状态压缩的动态规划")]),_._v(" "),l("li",[_._v("DC3生成后缀数组详解")]),_._v(" "),l("li",[_._v("后缀数组解决的面试题")]),_._v(" "),l("li",[_._v("动态规划猜法中和外部信息简化的相关问题（上）、哈夫曼树")]),_._v(" "),l("li",[_._v("动态规划猜法中和外部信息简化的相关问题（下）、最大网络流算法之Dinic算法")])]),_._v(" "),l("p",[l("strong",[_._v("刷题班")]),_._v(":")]),_._v(" "),l("p",[_._v("跟着一起章节刷题，可以参考部分，做好取舍。")]),_._v(" "),l("h3",{attrs:{id:"_7-《算法图解》"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_7-《算法图解》"}},[_._v("#")]),_._v(" 7.《算法图解》")])])}),[],!1,null,null,null);v.default=t.exports}}]);