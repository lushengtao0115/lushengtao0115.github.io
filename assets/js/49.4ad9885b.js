(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{665:function(t,a,s){"use strict";s.r(a);var r=s(7),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("这一章是异常处理部分内容。主要内容包括：异常的概念，异常体系图，常见的异常，异常处理的两种方式，自定义异常，throw和throws的区别。")])]),t._v(" "),s("h3",{attrs:{id:"_1-为什么需要使用异常机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么需要使用异常机制"}},[t._v("#")]),t._v(" 1. 为什么需要使用异常机制？")]),t._v(" "),s("ul",[s("li",[t._v("若一个程序，因为不致命的问题导致系统崩溃，它的健壮性是不好的。如果进行了异常处理，那么程序还可以继续运行，还可以通过这种方法输出捕获到异常信息。")])]),t._v(" "),s("h3",{attrs:{id:"_2-异常是什么-包括哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-异常是什么-包括哪些"}},[t._v("#")]),t._v(" 2. 异常是什么，包括哪些？")]),t._v(" "),s("ul",[s("li",[s("u",[t._v("异常指的是程序执行的时候发生的不正常的情况")]),t._v("。")]),t._v(" "),s("li",[t._v("异常是一个事件，它发生在程序运行期间，干扰了正常的指令流程。")]),t._v(" "),s("li",[t._v("Java通 过API中Throwable类的众多子类描述各种不同的异常。因而，"),s("u",[t._v("Java异常都是对象，是Throwable子类的实例")]),t._v("，描述了出现在一段编码中的 错误条件。当条件生成时，错误将引发异常。")]),t._v(" "),s("li",[s("strong",[t._v("注意")]),t._v("：开发过程中的语法错误和逻辑错误不是异常。")]),t._v(" "),s("li",[s("strong",[t._v("异常事件主要分为两大类")]),t._v("：\n"),s("ol",[s("li",[s("big",[t._v("Error错误")]),t._v("：它是严重错误，程序会崩溃，Java虚拟机解决不了。比如Jvm系统内部错误，资源耗尽等情况。")],1),t._v(" "),s("li",[s("big",[t._v("Exception")]),t._v("：其他因为编程或偶然的外在因素导致的一般性问题，可以使用针对性的代码解决。分为两大类：运行时异常和编译时异常。")],1)])])]),t._v(" "),s("h3",{attrs:{id:"_3-异常体系图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-异常体系图"}},[t._v("#")]),t._v(" 3. "),s("mark",[t._v("异常体系图")])]),t._v(" "),s("ul",[s("li",[s("mark",[t._v("记住")]),t._v(" "),s("img",{attrs:{src:"https://img-blog.csdn.net/20160331115514210",alt:"img"}})]),t._v(" "),s("li",[t._v("运行时异常：\n"),s("ul",[s("li",[s("p",[t._v("这些异常是不检查异常(即编译器不要求强制处置的异常，编译器检查不出来)（当程序中可能出现这类异常，即使没有用"),s("code",[t._v("try-catch")]),t._v("语句捕获它，也没有用"),s("code",[t._v("throws")]),t._v("子句声明抛出它，也会编译通过）。")])]),t._v(" "),s("li",[s("p",[t._v("程序中可以选择捕获处理，也可以不处理,"),s("u",[t._v("程序会编译通过")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[s("mark",[t._v("待解决的问题")]),t._v("：运行时异常，不处理也能编译通过，为什么会报错？编译和运行分开？")]),t._v(" "),s("p",[t._v("看到一种说法是，编译会通过，但是运行时会被系统抛出。")])])])])]),t._v(" "),s("li",[t._v("编译时异常：\n"),s("ul",[s("li",[s("u",[t._v("如果不处理，会编译不通过")])]),t._v(" "),s("li",[t._v("处理方式：当程序中可能出现这类异常，要么用try-catch语句捕获它，要么用throws子句声明抛出它，否则编译不会通过。")])])]),t._v(" "),s("li",[t._v("异常体系图的解读：在 Java 中，所有的异常都有一个共同的祖先 "),s("code",[t._v("Throwable")]),t._v("（可抛出）。"),s("code",[t._v("Throwable")]),t._v(" 指定代码中可用异常传播机制通过 Java 应用程序传输的任何问题的共性。\n"),s("code",[t._v("Throwable")]),t._v("： 有两个重要的子类："),s("code",[t._v("Exception")]),t._v("（异常）和 "),s("code",[t._v("Error")]),t._v("（错误），二者都是 Java 异常处理的重要子类，各自都包含大量子类。")])]),t._v(" "),s("h3",{attrs:{id:"_4-常见的异常举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-常见的异常举例"}},[t._v("#")]),t._v(" 4. 常见的异常举例：")]),t._v(" "),s("ul",[s("li",[t._v("运行时异常：\n"),s("ul",[s("li",[t._v("NullPointerException空指针异常")]),t._v(" "),s("li",[t._v("ArithmeticException数字运算异常")]),t._v(" "),s("li",[t._v("ArrayIndexOutOfBoundsException数组下标越界异常")]),t._v(" "),s("li",[t._v("ClassCastException类型转换异常")]),t._v(" "),s("li",[t._v("NumberFormatException数字格式不正确异常")])])]),t._v(" "),s("li",[t._v("编译时异常：\n"),s("ul",[s("li",[t._v("SQLException  操作数据库时，查询表可能发生的异常")]),t._v(" "),s("li",[t._v("IOException 操作文件时候发生的异常")]),t._v(" "),s("li",[t._v("FileNotFoundException")]),t._v(" "),s("li",[t._v("ClassNotFoundException")]),t._v(" "),s("li",[t._v("EOFException")]),t._v(" "),s("li",[t._v("IllegalArguementException参数异常")])])])]),t._v(" "),s("h3",{attrs:{id:"_5-异常处理的两种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-异常处理的两种方式"}},[t._v("#")]),t._v(" 5. 异常处理的两种方式：")]),t._v(" "),s("ul",[s("li",[t._v("(1)  Try-catch-finally：\n"),s("ul",[s("li",[t._v("若异常发生了，则异常发生后面的代码不会执行，直接进入到catch块")]),t._v(" "),s("li",[t._v("若异常没有发生，则顺序执行代码块，而不会进入到catch")]),t._v(" "),s("li",[t._v("若希望不管是否发生异常，都执行某段代码，（如关闭连接，释放资源），则使用finally{}。")]),t._v(" "),s("li",[t._v("如果代码块可能有多个异常，可以使用多个catch分别捕获不同的异常，相应处理。但是要求子类异常写在前面，父类异常写在后面。")])])]),t._v(" "),s("li",[t._v("(2)  Throws：\n"),s("ul",[s("li",[t._v("将发生的异常抛出，交给调用者（方法）来处理，最顶级的处理者就是JVM。JVM处理异常特别的简单：直接输出异常信息，中断退出程序。")]),t._v(" "),s("li",[t._v("如果没有显式地使用try-catch和throws，他会默认地使用throws。")]),t._v(" "),s("li",[t._v("在方法声明中用throws语句可以声明抛出异常的列表（即可以抛出多个异常，使用逗号分隔），throws后面的异常类型可以是方法中产生的异常类型，也可以是它的父类（包含多个异常）。")]),t._v(" "),s("li",[t._v("子类重写父类的方法时，对抛出异常的规定：子类重写的方法，所抛出异常的类型要么一致，要么为父类抛出异常类型的子类型（同理，若是父类的方法没有声明异常，那么子类继承方法后，也不能声明异常）")]),t._v(" "),s("li",[t._v("throws是异常处理的一种方式。他位置在方法声明处，后面跟的是异常类型。throw是手动生成异常对象的关键字。他位置在方法体中，后面跟的是异常对象。")]),t._v(" "),s("li",[s("strong",[t._v("异常处理规则")]),t._v("：通常，应该捕获那些知道如何处理的异常，将不知道如何处理的异常继续传递下去。传递异常可以在方法签名处使用 throws 关键字声明可能会抛出的异常。")])])])]),t._v(" "),s("h3",{attrs:{id:"_6-final关键字说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-final关键字说明"}},[t._v("#")]),t._v(" 6. final关键字说明：")]),t._v(" "),s("ul",[s("li",[t._v("finally语句块总是会被执行。")]),t._v(" "),s("li",[t._v("它主要用于回收在try块里打开的物力资源(如数据库连接、网络连接和磁盘文件)。")]),t._v(" "),s("li",[t._v("只有finally块，执行完成之后，才会回来执行try或者catch块中的return或者throw语句，如果finally中使用了return或者throw等终止方法的语句，则就不会跳回执行，直接停止。")])]),t._v(" "),s("h3",{attrs:{id:"_7-异常的抛出-throw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-异常的抛出-throw"}},[t._v("#")]),t._v(" 7. 异常的抛出(throw)")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果代码可能会引发某种错误，可以创建一个合适的异常类实例并抛出它，这就是抛出异常。例子如下：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArithmeticException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数不能为0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//抛出一个运行时异常")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("大部分情况下都不需要手动抛出异常，因为Java的大部分方法要么已经处理异常，要么已经声明异常。")])])]),t._v(" "),s("h3",{attrs:{id:"_8-异常实践-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-异常实践-代码"}},[t._v("#")]),t._v(" 8. 异常实践(代码)")]),t._v(" "),s("p",[s("mark",[t._v("+++待补充+++")])]),t._v(" "),s("h3",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接：")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/bestxianfeng163/article/details/77197954",target:"_blank",rel:"noopener noreferrer"}},[t._v("异常体系图"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/AbelZone/p/10049997.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("编译时异常与运行时异常的区别"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.pdai.tech/md/java/basic/java-basic-x-exception.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java基础-异常机制详解"),s("OutboundLink")],1)]),t._v(" "),s("li")])])}),[],!1,null,null,null);a.default=v.exports}}]);