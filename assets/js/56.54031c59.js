(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{664:function(s,a,t){"use strict";t.r(a);var n=t(7),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("视频P711-P730.")])]),s._v(" "),t("blockquote",[t("p",[s._v("反射机制入门：")]),s._v(" "),t("ul",[t("li",[s._v("反射是java的一种机制，让我们可以在运行时获取类的信息")]),s._v(" "),t("li",[s._v("通过反射，我们可以在程序运行时动态地创建对象，还能获取类的所有信息，比如"),t("strong",[s._v("它的属性、构造器、方法、注解等")]),s._v("。")]),s._v(" "),t("li",[s._v("这是框架的灵魂。")])])]),s._v(" "),t("h2",{attrs:{id:"主要内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要内容"}},[s._v("#")]),s._v(" 主要内容")]),s._v(" "),t("ul",[t("li",[s._v("反射机制")]),s._v(" "),t("li",[s._v("Class类")]),s._v(" "),t("li",[t("mark",[s._v("类加载")])]),s._v(" "),t("li",[s._v("（应用）反射获取类的结构信息\n"),t("ul",[t("li",[s._v("Class")]),s._v(" "),t("li",[s._v("Field")]),s._v(" "),t("li",[s._v("Method")]),s._v(" "),t("li",[s._v("——")])])]),s._v(" "),t("li",[s._v("反射相关类")]),s._v(" "),t("li",[s._v("反射调用性能优化")]),s._v(" "),t("li",[s._v("Class类常用方法")])]),s._v(" "),t("h2",{attrs:{id:"补充记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充记录"}},[s._v("#")]),s._v(" 补充记录")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("反射机制：方法.invole(对象)")])]),s._v(" "),t("li",[t("p",[s._v("加载完类之后，在堆中就产生了一个Class类型的对象，一个类只有一个Class对象，这个对象包好了类的完整结构信息。通过这个对象得到类的结构。")])]),s._v(" "),t("li",[t("p",[s._v("Java的反射机制原理图：\n"),t("img",{attrs:{src:"C:%5CUsers%5Chp%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220228195448688.png",alt:"image-20220228195448688"}})])]),s._v(" "),t("li",[t("p",[s._v("反射相关的主要的类")]),s._v(" "),t("img",{staticStyle:{zoom:"80%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220228195708291.png",alt:"image-20220228195708291"}}),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220228200507336.png",alt:"image-20220228200507336"}})]),s._v(" "),t("li",[t("p",[s._v("反射调用优化"),t("mark",[s._v("+++")]),s._v("这里还没有完成")])]),s._v(" "),t("li",[t("p",[s._v("Class类也是类，因此也继承Object类，类图如下\n"),t("img",{attrs:{src:"C:%5CUsers%5Chp%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220302181951534.png",alt:"image-20220302181951534"}})])]),s._v(" "),t("li",[t("p",[s._v("Class类对象不是new出来的，而是系统创建的，通过 ClassLoader 类的 loadClass 方法创建")])]),s._v(" "),t("li",[t("p",[s._v("对于某个类的 Class 对象，在堆中有且仅有一份，因为类只加载一次")])]),s._v(" "),t("li",[t("p",[s._v("通过Class对象可以完整得到这个类的完整结构。\n"),t("img",{staticStyle:{zoom:"80%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302194607165.png",alt:"image-20220302194607165"}})])]),s._v(" "),t("li",[t("p",[s._v("Class对象是存放在堆上的。")])]),s._v(" "),t("li",[t("img",{staticStyle:{zoom:"80%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302194927387.png",alt:"image-20220302194927387"}})]),s._v(" "),t("li",[t("p",[s._v("Class常用方法补充：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所有的属性（字段）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Field")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" fields"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cls"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFields")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Field")]),s._v(" f"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" fields"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出所有字段的名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("获取类对象的几种方式")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在不同的阶段，可以通过不同的方法来得到Class类对象，以下得到的是同一个类对象。")])]),s._v(" "),t("li",[t("ol",[t("li",[s._v("代码阶段：Class.forName()。多用于配置文件，读取类全路径，加载类。")])])]),s._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[s._v("加载阶段：类名.class。多用于参数传递，比如通过反射得到对应构造器对象。")])])]),s._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[s._v("运行阶段：对象.getClass()。应用场景，有对象实例。")])])]),s._v(" "),t("li",[t("ol",{attrs:{start:"4"}},[t("li",[t("p",[s._v("类加载器：通过类加载器(4种)获取到类的对象。\n(1)先得到类加载器car")]),s._v(" "),t("p",[s._v("(2)通过类加载器得到Class对象")])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),s._v(" car "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Car")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" classLoder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" car"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" aClass "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" classLoder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.springbear.Car"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[t("img",{staticStyle:{zoom:"80%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302200937825.png",alt:"image-20220302200937825"}}),s._v(" "),t("img",{staticStyle:{zoom:"80%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302201301255.png",alt:"image-20220302201301255"}})]),s._v(" "),t("li",[t("p",[s._v("实例代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code")]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"})])]),s._v(" "),t("li",[t("p",[s._v("基本数据类型（int，char，......，short）按照如下方式得到Class对象")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" integerClass "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("基本数据类型对应的包装类，可以通过 .TYPE获得 Class 对象：Class cls = Integer.TYPE")])])])]),s._v(" "),t("li",[t("p",[s._v("哪些类型有Class对象")]),s._v(" "),t("ul",[t("li",[s._v("外部类，内部类")]),s._v(" "),t("li",[s._v("接口")]),s._v(" "),t("li",[s._v("数组")]),s._v(" "),t("li",[s._v("枚举")]),s._v(" "),t("li",[s._v("注解")]),s._v(" "),t("li",[s._v("基本数据类型")]),s._v(" "),t("li",[s._v("void")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 外部类")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Serializable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Deprecated")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注解")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("动态加载和静态加载")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302202903867.png",alt:"image-20220302202903867"}})]),s._v(" "),t("ul",[t("li",[t("p",[s._v("反射机制是java实现动态语言的关键，也就是通过反射实现类动态加载")])]),s._v(" "),t("li",[t("p",[s._v("静态加载：编译时（还未运行）加载相关的类，如果没有则报错，依赖性太强\n以下例子运行时可能不会用得到。")]),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302203315417.png",alt:"image-20220302203315417"}})]),s._v(" "),t("li",[t("p",[s._v("动态加载：只在运行时加载需要的类，如果运行时未使用到该类，则不报错，降低了依赖性")]),s._v(" "),t("p",[s._v("以下编译的时候不会加载这个类，而是运行时候加载这个类。")]),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302203447779.png",alt:"image-20220302203447779"}})]),s._v(" "),t("li",[t("p",[t("strong",[s._v("类加载的时机")]),s._v("：（即什么时候会类加载）")]),s._v(" "),t("ol",[t("li",[s._v("当创建对象时（new）")]),s._v(" "),t("li",[s._v("当子类被加载时，父类也加载")]),s._v(" "),t("li",[s._v("调用类中的静态成员时")]),s._v(" "),t("li",[s._v("通过反射（动态加载）")])])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("类加载流程图")]),s._v("\n这个图要记住。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302204448002.png",alt:"image-20220302204448002"}}),s._v(" "),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220302204822921.png",alt:"image-20220302204822921"}})]),s._v(" "),t("li",[t("p",[t("strong",[s._v("类加载的五个阶段")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("加载阶段：\n将字节码从不同的数据源（可能是 .class 文件、也可能是 jar 包、甚至是网络）转化为二进制字节流加载到内存（方法区）中，并生成一个代表该类的 java.lang.Class 对象")])]),s._v(" "),t("li",[t("p",[s._v("连接之验证阶段：")]),s._v(" "),t("p",[s._v("目的是为了确保 .class 文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全；")]),s._v(" "),t("p",[s._v("验证包括对文件格式验证（是否以魔数 oxcafebabe 开头）、元数据验证、字节码验证和符号引用验证；")]),s._v(" "),t("p",[s._v("可以考虑使用 -Xverify:none 参数来关闭大部分的类验证措施，缩短虚拟机加载时间")])]),s._v(" "),t("li",[t("p",[s._v("连接之准备阶段：")]),s._v(" "),t("p",[s._v("JVM会在该阶段对静态变量，分配内存并且默认初始化（对应数据类型的默认初始值，如0，null，false等）。")]),s._v(" "),t("p",[s._v("这些变量所使用的内存都将在方法区中进行分配。")])]),s._v(" "),t("li",[t("p",[s._v("连接之解析阶段：")]),s._v(" "),t("p",[s._v("虚拟机将常量池内的符号引用替换为直接引用的过程，就叫做解析。")])]),s._v(" "),t("li",[t("p",[s._v("初始化阶段：")]),s._v(" "),t("p",[s._v("真正执行类中定义的 Java 代码（这个阶段就是我们程序员可以控制的了），此阶段是执行 "),t("clinit",[s._v("() 方法的过程；")])],1),s._v(" "),t("p",[t("clinit",[s._v("() 方法是由编译器按语句在源文件中的出现顺序，依次自动收集类中所有的静态变量的赋值动作和静态代码块中的语句，并进行合并；")])],1),s._v(" "),t("p",[s._v("("),t("clinit",[s._v("()方法有同步机制，正因为这个机制，才能保证某个类在内存中，只有一份Class对象（在多线程的情况下，也不可能产生多个Class对象）)：JVM 保证一个类的 "),t("clinit",[s._v("() 方法在多线程环境中会被正确地加锁、同步，如果多个线程同时去初始化一个类，那么只有一个线程会去执行 "),t("clinit",[s._v("() 方法，其它线程都需要阻塞等待，直到活动线程执行完 "),t("clinit",[s._v("() 方法")])],1)],1)],1)],1)])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("通过反射获取类结构信息")]),s._v("\n下面列举的是常用的，这个方法特别多。")]),s._v(" "),t("div",{staticClass:"language-markdown line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[s._v("java.lang.Class类\n    getName\t获取全类名\n    getSimpleName\t获取简单类名\n    getFields\t获取所有 public 修饰的字段，本类以及父类\n    getDeclaredFidles\t获取本类中的所有字段（包括public和非public的）\n    getMethods\t获取所有 public 修饰的方法，本类以及父类\n    getDeclaredMethods\t获取本类中的所有方法\n    getConstructors\t获取所有 public 修饰的构造器，只包含本类\n    getDeclaredConstructors\t获取本类中的所有构造器\n    getPackage\t以 Package 形式返回包信息\n    getSuperClass\t以 Class 形式返回父类信息\n    getAnnotations\t以 Annotation[] 形式返回注解信息\n\n\njava.lang.reflect.Field类\n/"),t("span",{pre:!0,attrs:{class:"token italic"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token content"}},[s._v("\nField[] declaredFields = personCls.getDeclaredFidles();\ndeclaredFields.getModifiers();\ndeclaredFields.getType();\ndeclaredFields.getName();\n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("*")])]),s._v("/\n\tgetModifiers()\t以 int 形式返回修饰符：默认修饰符是 0，public 是 1，private 是 2，protected 是 4，static 是 8，final 是 16；多重修饰符则相加\n\tgetType()\t以 Class 形式返回类型\n\tgetName()\t返回字段名\n\t\n\t\n\t\njava.lang.reflect.Method类\n\tgetModifiers\t以 int 形式返回修饰符\n\tgetReturnType\t以 Class 类型获取方法返回类型\n\tgetName\t返回方法名\n\tgetParameterTypes\t以 Class[] 形式返回参数类型数组\n\n\n\njava.lang.reflect.Constructor类\n\tgetModifiers\t以 int 形式返回修饰符\n\tgetName\t返回构造器的全类名\n\tgetParameterTypes\t以 Class[] 形式返回参数类型数组\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("通过反射创建对象")]),s._v("(实例)")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("方式一：调用类中的public修饰的无参构造器")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" tempClass "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.springbear.Temp"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" tempClass"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("方式二：调用类中的指定构造器")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" userClass "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.springbear.Temp"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获得指定构造器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Constructor")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" userConstructor "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" userClass"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDeclaredConstrutor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以获取本类中定义的某个特定构造器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建实例")]),s._v("\nuserConstructor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setAccessible")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 爆破【暴力破解】：使用反射可以访问私有的构造器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" userConstructor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lst"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("strong",[s._v("Class类相关方法")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("newInstance：调用类中的无参构造器，获取对应类的对象")]),s._v(" "),t("li",[s._v("getConstructor(Class...clazz)：根据参数列表，获取对应的public构造器对象")]),s._v(" "),t("li",[s._v("getDeclaraedConstructor(Class...clazz)：根据参数列表，获取对应的所有（包含非public的）构造器对象")])]),s._v(" "),t("p",[t("strong",[s._v("Constructor类相关方法")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("setAccessible：爆破")]),s._v(" "),t("li",[s._v("newInstance(Object...obj)：调用构造器")])])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("通过反射访问类中的成员：反射爆破操作属性")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" userClass "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.springbear.User"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" userObject "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" userClass"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获得指定字段")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Field")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" userClass"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDeclaredField")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 爆破")]),s._v("\nname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setAccessible")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获得值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置值")]),s._v("\nname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Spring-_-Bear"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("通过反射访问类中的成员：反射爆破操作方法")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" userClass "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.springbear.User"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" userObject "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" userClass"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("newInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取指定的方法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Method")]),s._v(" loginMethod "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" userClass"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDeclaredMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"login"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 爆破")]),s._v("\nloginMethod"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setAccessible")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用方法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" springbear "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" loginMethod"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("invoke")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"springbear"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("springbear"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("梳理")])]),s._v(" "),t("li",[t("p",[s._v("——")])])]),s._v(" "),t("h2",{attrs:{id:"博客学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#博客学习"}},[s._v("#")]),s._v(" 博客学习")]),s._v(" "),t("p",[s._v("反射是框架设计的灵魂。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("反射机制概述：JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。")])]),s._v(" "),t("li",[t("p",[s._v("反射就是把Java类中的各种成分映射成一个个的Java对象。")])]),s._v(" "),t("li",[t("p",[s._v("反射的本质理解：就是得到class对象后，反向获取student对象的各种信息。")])]),s._v(" "),t("li",[t("p",[s._v("类加载的过程：")]),s._v(" "),t("ul",[t("li",[s._v("当我们new student时，jvm会加载我们的student.class")]),s._v(" "),t("li",[s._v("jvm会去我们本地磁盘找student.class文件并加载到jvm内存中")]),s._v(" "),t("li",[s._v("将.class文件读入内存，同时会产生一个class对象，这个class对象是jvm自动创建的，一个类只产生一个class对象")])]),s._v(" "),t("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://img-blog.csdn.net/20170513133210763",alt:"img"}})]),s._v(" "),t("li",[t("p",[s._v("Class类在java API中的详解")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Class")]),s._v(" 没有公共构造方法。Class对象是在加载类时由Java虚拟机以及通过调用类加载器中的方法自动构造的。")]),s._v(" "),t("li",[s._v("它是final修饰的类，不能被继承")]),s._v(" "),t("li",[s._v("java.lang.Class"),t("T")],1),s._v(" "),t("li",[s._v("Class类的方法共有64个，用到哪个就记录哪个。")])]),s._v(" "),t("img",{attrs:{src:"https://img-blog.csdn.net/20170513135521667",alt:"img"}})]),s._v(" "),t("li",[t("p",[s._v("获取Class对象的三种方式")]),s._v(" "),t("ol",[t("li",[s._v("Object ——> getClass()                         （对象都有了还要反射干什么）")]),s._v(" "),t("li",[s._v("任何数据类型（包括基本数据类型）都有一个“静态”的class属性                 （需要导入类的包，依赖太强）")]),s._v(" "),t("li",[s._v("通过Class类的静态方法：forName(String className)                                 （常用，一个字符串可以传入也可写在配置文件中等多个方法）")])])]),s._v(" "),t("li",[t("ol",[t("li",[s._v("通过反射获取构造方法并使用")])])]),s._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[s._v("获取成员变量并调用")])])]),s._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[s._v("获取成员方法并调用")])])]),s._v(" "),t("li",[t("ol",{attrs:{start:"4"}},[t("li",[s._v("反射main方法")])])]),s._v(" "),t("li",[t("ol",{attrs:{start:"5"}},[t("li",[s._v("通过反射运行配置文件内容")])])]),s._v(" "),t("li",[t("ol",{attrs:{start:"6"}},[t("li",[s._v("通过反射越过泛型检查")])])]),s._v(" "),t("li",[t("p",[s._v("——")])])]),s._v(" "),t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://springbear.blog.csdn.net/article/details/122059520",target:"_blank",rel:"noopener noreferrer"}},[s._v("韩顺平-反射"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/sinat_38259539/article/details/71799078?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164587213816780271590179%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=164587213816780271590179&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-71799078.pc_search_result_positive&utm_term=%E5%8F%8D%E5%B0%84&spm=1018.2226.3001.4187",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java基础-反射"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);