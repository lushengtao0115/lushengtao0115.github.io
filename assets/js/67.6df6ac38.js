(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{680:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[s._v("这一章主要是整理面向对象的重难点部分，还有实例。另外，需要重新梳理面向对象部分的知识脉络。还有后续的逐步完善。")])]),s._v(" "),a("h2",{attrs:{id:"一-整体梳理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-整体梳理"}},[s._v("#")]),s._v(" 一. 整体梳理")]),s._v(" "),a("h3",{attrs:{id:"_1-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[s._v("#")]),s._v(" (1)简介")]),s._v(" "),a("p",[s._v("面向对象部分是Java语言重中之重，我们需要对其形成一个整体认识，这里基于此进行梳理。")]),s._v(" "),a("h3",{attrs:{id:"_2-面向对象逻辑框图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-面向对象逻辑框图"}},[s._v("#")]),s._v(" (2)面向对象逻辑框图")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/imgs/面向对象框图.png"),alt:"mixureSecure"}}),s._v(" "),a("h3",{attrs:{id:"_3-面向对象说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-面向对象说明"}},[s._v("#")]),s._v(" (3)面向对象说明")]),s._v(" "),a("p",[a("mark",[s._v("待补充")])]),s._v(" "),a("h2",{attrs:{id:"二-重难点与细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-重难点与细节"}},[s._v("#")]),s._v(" 二. 重难点与细节")]),s._v(" "),a("h3",{attrs:{id:"_1-向上转型和向下转型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-向上转型和向下转型"}},[s._v("#")]),s._v(" (1)向上转型和向下转型")]),s._v(" "),a("ul",[a("li",[s._v("这个部分是多态的向上转型和向下转型")]),s._v(" "),a("li",[s._v("多态的向上转型\n"),a("ul",[a("li",[s._v("向上转型本质是"),a("u",[s._v("父类的引用指向了子类的对象")]),s._v("(编译类型是父类)")]),s._v(" "),a("li",[s._v("此时可以调用父类中所有成员（遵守访问权限）")]),s._v(" "),a("li",[s._v("不能调用子类中特有成员（"),a("mark",[s._v("能不能调用由编译器决定，看他的编译类型")]),s._v("）")]),s._v(" "),a("li",[s._v("最终运行效果要看子类的具体实现（"),a("mark",[s._v("运行时看运行类型")]),s._v("）")]),s._v(" "),a("li",[s._v("("),a("mark",[s._v("总结")]),s._v(")通过下述代码例子去理解解释！！！\n"),a("ul",[a("li",[s._v("指向子类的父类引用由于向上转型了，"),a("u",[s._v("它只能访问父类中拥有的方法和属性")]),s._v("，")]),s._v(" "),a("li",[s._v("而对于子类中存在而父类中不存在的方法，该引用是不能使用的，尽管是重载该方法。")]),s._v(" "),a("li",[a("u",[s._v("若子类重写了父类中的某些方法，在调用该些方法的时候，必定是使用子类中定义的这些方法（动态连接、动态调用）")])])])])])]),s._v(" "),a("li",[s._v("多态的向下转型\n"),a("ul",[a("li",[s._v("语法：子类类型  引用名  =（子类类型）父类引用")]),s._v(" "),a("li",[s._v("只能"),a("u",[s._v("强转父类的引用")]),s._v("，不能强转父类的对象")]),s._v(" "),a("li",[s._v("为了避免向下转型出错，使用instanceof操作符，可以先判断类型再进行向下转型")]),s._v(" "),a("li",[s._v("条件：并不是所有对象都可以向下转型，"),a("u",[s._v("只有当这个对象原本就是子类对象通过向上转型得到的时候才能成功转型")])])])])]),s._v(" "),a("h3",{attrs:{id:"_2-访问修饰符与作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-访问修饰符与作用域"}},[s._v("#")]),s._v(" (2)访问修饰符与作用域")]),s._v(" "),a("ul",[a("li",[s._v("访问修饰符可以控制方法和属性的访问权限\n"),a("img",{attrs:{src:s.$withBase("/imgs/访问修饰符.jpg"),alt:"mixureSecure"}})]),s._v(" "),a("li",[s._v("private表示只有在同一个类中才可以访问")])]),s._v(" "),a("h3",{attrs:{id:"_3-多态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-多态"}},[s._v("#")]),s._v(" (3)多态")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("方法重载是一个类的多态性体现,方法重写是子类与父类的一种多态性体现")])]),s._v(" "),a("li",[a("p",[s._v("多态分为编译时多态和运行时多态：")]),s._v(" "),a("ul",[a("li",[a("u",[s._v("编译时多态")]),s._v("主要指的是方法的重载")]),s._v(" "),a("li",[a("u",[s._v("运行时多态")]),s._v("指程序中定义的对象引用所指向的具体类型在运行期间才确定")])])]),s._v(" "),a("li",[a("p",[s._v("运行时多态有三个条件：")]),s._v(" "),a("ul",[a("li",[s._v("继承")]),s._v(" "),a("li",[s._v("覆盖（重写）")]),s._v(" "),a("li",[s._v("向上转型")])])]),s._v(" "),a("li",[a("p",[s._v("("),a("mark",[s._v("重点")]),s._v(")多态性的详细解释：")]),s._v(" "),a("blockquote",[a("p",[s._v("多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是"),a("u",[s._v("在程序运行期间才确定，即一个引用变量倒底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定")]),s._v("。因为在程序运行时才确定具体的类，这样，不用修改源程序代码，就可以让引用变量绑定到各种不同的类实现上，从而导致该引用调用的具体方法随之改变，即不修改程序代码就可以改变程序运行时所绑定的具体代码，让程序可以选择多个运行状态，这就是多态性。")])])]),s._v(" "),a("li",[a("p",[s._v("("),a("mark",[s._v("重点")]),s._v(")java的动态绑定机制:")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("动态绑定体现了Java的继承与多态，在继承链中，"),a("u",[s._v("JVM一直沿着继承链动态找到带有该方法的实现")]),s._v("。")]),s._v(" "),a("li",[s._v("方法可以沿着继承链的多个类中实现，子类可以重写父类的方法。"),a("u",[s._v("JVM决定运行时调用哪个方法")]),s._v("，这就是动态绑定。")]),s._v(" "),a("li",[s._v("动态绑定机制的原理：假设，对象o是类C1的实例，其中C1是C2的子类，C2是C3的子类，那么o也是C2，C3的实例。如果对象o调用一个方法p，JVM会依次在类C1，C2，C3中查找方法p的实现，直到找到为止。（父子类之间的继承关系）。")]),s._v(" "),a("li",[s._v("("),a("mark",[s._v("注意")]),s._v("！！重新看视频)当调用对象方法的时，该方法会和该对象的内存地址/运行类型绑定。当调用对象属性的时候，没有动态绑定机制，哪里声明就在哪里使用。")])])])]),s._v(" "),a("li",[a("p",[s._v("多态的几种应用体现：")]),s._v(" "),a("ol",[a("li",[s._v("多态数组：数组的定义类型为父类类型，里面保存的实际元素为子类类型；")]),s._v(" "),a("li",[s._v("多态参数：方法定义的形参类型为父类类型，实参类型允许为子类类型。")])])])]),s._v(" "),a("h3",{attrs:{id:"_4-super和this关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-super和this关键字"}},[s._v("#")]),s._v(" (4)super和this关键字")]),s._v(" "),a("ul",[a("li",[s._v("Jvm会给每个对象分配this，this代表当前对象。也就是说，哪个对象调用，this就代表哪个对象。")]),s._v(" "),a("li",[s._v("（构造器）this可以访问构造器：this(参数列表);"),a("u",[s._v("只能在构造器中使用")]),s._v("（即只能在构造器中访问另外一个构造器）且这条语句必须放在第一条语句（如果有的话，这是语法规定）。")]),s._v(" "),a("li",[s._v("（构造器）super和this都必须放在第一行，因此这两个方法都不能共存在同一个构造器")]),s._v(" "),a("li",[s._v("（构造器）super()可以调用父类的无参构造器，this(参数列表)调用此类的另外一个构造器完成参数的初始化")]),s._v(" "),a("li",[s._v("super可以访问父类的属性，方法，构造器\n"),a("ul",[a("li",[s._v("访问父类的属性，但是不能访问父类的private属性")]),s._v(" "),a("li",[s._v("访问父类的方法，但是不能访问父类的private方法")]),s._v(" "),a("li",[s._v("访问父类的构造器，同之前")])])]),s._v(" "),a("li",[s._v("("),a("mark",[s._v("注意")]),s._v(")super的访问不限于直接父类")])]),s._v(" "),a("h3",{attrs:{id:"_5-构造方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-构造方法"}},[s._v("#")]),s._v(" (5)构造方法")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("特点：")]),s._v(" "),a("ol",[a("li",[s._v("名字与类名相同。")]),s._v(" "),a("li",[s._v("没有返回值，但不能用 void 声明构造函数。")]),s._v(" "),a("li",[s._v("生成类的对象时自动执行，无需调用。")])])]),s._v(" "),a("li",[a("p",[s._v("构造方法不能被override重写即不能由子类重写父类的构造方法，但是可以overload重载，所以可以看到一个类中有多个构造函数的情况")])]),s._v(" "),a("li",[a("p",[s._v("("),a("mark",[s._v("重点")]),s._v(")构造方法的主要作用是完成对类对象的初始化工作，它的调用由系统完成，不能人为调用")]),s._v(" "),a("blockquote",[a("p",[s._v("不能人为调用？这个观点是什么意思？对错？因为可以使用this(参数列表)在构造器中访问其他的构造器。可能是我的理解出错。")]),s._v(" "),a("p",[s._v("这个解释如下：调用和访问是两码事。调用即实现这个构造器，访问即可以拿来，这个构造器里面访问就相当于直接使用别的而不是重新写一个，而不一定会调用。构造器的调用永远由系统完成！")])])]),s._v(" "),a("li",[a("p",[s._v("若是一个类没有声明构造方法也会有默认的不带参数的构造方法。若是我们有了类的构造方法，java就不会添加默认的无参构造方法")])]),s._v(" "),a("li",[a("p",[s._v("记住，构造器总是伴随着new操作一起调用。我们在创建对象的时候后面加括号，就是调用这个构造器，调用无参构造方法就是空括号。")])]),s._v(" "),a("li",[a("p",[s._v("构造方法可以重载，即有几个构造方法。")])]),s._v(" "),a("li",[a("p",[s._v("("),a("mark",[s._v("注意")]),s._v(")若我们重载了有参的构造方法，记得也要把无参的构造方法写出来（无论是否用到），可以少踩一些坑。"),a("u",[s._v("例如这个坑可能是")]),s._v("（下一条）：子类没有显示调用父类的构造器，那么就会调用无参的构造器，若是父类没有无参的构造器，编译器就会报错。")])]),s._v(" "),a("li",[a("p",[s._v("如果构造器方法没有显示调用一个父类的构造器，那么编译器会为其自动加上一个默认的super()，而父类若没有默认的无参数构造器，编译器就会报错。super()必须是构造器方法的第一个子句")])])]),s._v(" "),a("h3",{attrs:{id:"_6-编译类型与运行类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-编译类型与运行类型"}},[s._v("#")]),s._v(" (6)编译类型与运行类型")]),s._v(" "),a("ul",[a("li",[s._v("一个对象的编译类型和运行类型可以不一致")]),s._v(" "),a("li",[s._v("编译类型在定义对象时就确定了不能改变，运行类型是可以变化的。")]),s._v(" "),a("li",[a("mark",[s._v("待补充")])])]),s._v(" "),a("h3",{attrs:{id:"_7-对象创建的详细过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-对象创建的详细过程"}},[s._v("#")]),s._v(" (7)对象创建的详细过程")]),s._v(" "),a("ol",[a("li",[s._v("加载类的信息，只会加载一次")]),s._v(" "),a("li",[s._v("在堆中分配空间（地址）")]),s._v(" "),a("li",[s._v("完成对象初始化\n"),a("ul",[a("li",[s._v("默认初始化")]),s._v(" "),a("li",[s._v("显式初始化")]),s._v(" "),a("li",[s._v("构造器初始化")])])]),s._v(" "),a("li",[s._v("把对象在堆中的地址返回给对象名即对象的引用")])]),s._v(" "),a("h3",{attrs:{id:"_8-深入理解java对象的创建过程-类的初始化与实例化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-深入理解java对象的创建过程-类的初始化与实例化"}},[s._v("#")]),s._v(" (8)深入理解Java对象的创建过程：类的初始化与实例化")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Java对象的创建过程包括类初始化和类实例化两个阶段。")])]),s._v(" "),a("li",[a("p",[a("u",[s._v("创建对象")]),s._v("最为直观的一种方式是使用new关键字，通过这种方式我们可以调用任意的构造函数去创建对象。这种方式又称为由执行类实例创建表达式而引起的对象创建。")])]),s._v(" "),a("li",[a("p",[a("u",[s._v("当一个对象被创建")]),s._v("时，"),a("u",[s._v("虚拟机就会为其分配内存")]),s._v("来"),a("u",[s._v("存放对象自己的实例变量")]),s._v("及其"),a("u",[s._v("从父类继承过来的实例变量")]),s._v("(即使这些从超类继承过来的实例变量有可能被隐藏也会被分配空间)。")])]),s._v(" "),a("li",[a("p",[a("u",[s._v("在为这些实例变量分配内存的同时")]),s._v("，"),a("u",[s._v("这些实例变量也会被赋予默认值(零值)")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("在"),a("u",[s._v("内存分配完成之后")]),s._v("，Java虚拟机就会开始对新创建的对象"),a("u",[s._v("按照程序猿的意志进行初始化")]),s._v("。在Java对象初始化过程中，主要涉及L"),a("u",[s._v("三种执行对象初始化")]),s._v("的结构，分别是 实例变量初始化、实例代码块初始化 以及 构造函数初始化。")])]),s._v(" "),a("li",[a("p",[a("u",[s._v("实例变量初始化与实例代码块初始化")]),s._v("：若使用这两种方式初始化，那么就能在构造函数初始化之前执行初始化操作。（实际上，编译器会将这些代码放到构造函数中去，超类构造函数的调用语句之后，构造函数本身的代码之前）。")])]),s._v(" "),a("li",[a("p",[a("u",[s._v("构造函数初始化")]),s._v("："),a("mark",[s._v("Java要求在实例化类之前，必须要先实例化其超类，以保证所创建实例的完整性")]),s._v("(从除了Object类之外所有的对象构造函数的第一条语句必须是超类构造函数的调用语句)。Java需要在一个对象初始化之前保证其所有的超类都被初始化完成，以保证创建一个完整的对象出来。")])]),s._v(" "),a("li",[a("p",[s._v("在"),a("u",[s._v("类加载过程中，准备阶段是正式为类变量（static成员变量）分配内存并设置类变量初始值（零值）的阶段，而初始化阶段就是执行类构造器（收集所有类变量的赋值动作以及静态代码块）")])])]),s._v(" "),a("li",[a("p",[a("mark",[s._v("类的初始化过程和类的实例化过程")]),s._v("：类的初始化是指类加载过程中的初始化阶段对类变量按照程序猿的意图进行赋值的过程；而类的实例化是指在类完全加载到内存中后创建对象的过程。")])])]),s._v(" "),a("h3",{attrs:{id:"_9-override与overload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-override与overload"}},[s._v("#")]),s._v(" (9)override与overload")]),s._v(" "),a("ul",[a("li",[s._v("override重写是子类对父类允许访问的方法的实现过程进行重新编写，返回值和形参都不能改变。"),a("u",[s._v("外壳不变，核心重写")]),s._v("。")]),s._v(" "),a("li",[s._v("overload重载是在一个类里面，方法名字相同，而参数不同，返回类型可以相同可以不同。")]),s._v(" "),a("li",[s._v("override重写的条件（详细）：\n"),a("ol",[a("li",[s._v("(形参，方法名)子类的方法的形参列表，方法名称，要和父类的完全一样")]),s._v(" "),a("li",[s._v("（返回类型）子类方法的返回类型和父类方法的返回类型一样，或者是父类返回类型的子类(兼容)")]),s._v(" "),a("li",[s._v("（访问权限）子类方法不能缩小父类方法的访问权限")])])])]),s._v(" "),a("h3",{attrs:{id:"_10-属性-方法-类等修饰符等的使用小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-属性-方法-类等修饰符等的使用小结"}},[s._v("#")]),s._v(" (10)属性，方法，类等修饰符等的使用小结")]),s._v(" "),a("ul",[a("li",[s._v("(属性/成员变量)访问修饰符 属性类型 属性名；（4中访问修饰符都能用；属性类型可以为任意类型）")]),s._v(" "),a("li",[s._v("(成员方法) (访问修饰符不写即默认访问，有四种；有返回类型；)")]),s._v(" "),a("li",[s._v("(局部变量)不能加修饰符")]),s._v(" "),a("li",[s._v("(构造器/构造方法)[修饰符] 方法名(形参列表){方法体；}(修饰符可以默认；无返回值)"),a("mark",[s._v("++")])]),s._v(" "),a("li",[s._v("(类)只有默认的和public才能修饰类")])]),s._v(" "),a("h3",{attrs:{id:"_11-继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-继承"}},[s._v("#")]),s._v(" (11)继承")]),s._v(" "),a("ul",[a("li",[s._v("子类可以继承父类所有的属性和方法，对于非私有的属性和方法可以直接访问，私有的属性和方法不可以直接访问。")]),s._v(" "),a("li",[s._v("("),a("mark",[s._v("重点")]),s._v(")子类必须调用父类的构造器，完成父类的初始化，默认是加super调用父类的无参构造器，一级一级地调用，完成参数初始化。")]),s._v(" "),a("li",[s._v("使用属性时，先看子类有没有是否可以访问，再看父类有没有是否可以访问，一直往上找直到Object类")]),s._v(" "),a("li",[s._v("("),a("mark",[s._v("重点")]),s._v(")"),a("u",[s._v("继承设计的基本思想")]),s._v("：父类的构造器完成父类属性初始化，子类的构造器完成子类属性的初始化")])]),s._v(" "),a("h3",{attrs:{id:"其他细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他细节"}},[s._v("#")]),s._v(" ()其他细节")]),s._v(" "),a("ul",[a("li",[a("mark",[s._v("待补充")])])]),s._v(" "),a("h2",{attrs:{id:"三-代码实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-代码实践"}},[s._v("#")]),s._v(" 三. 代码实践")]),s._v(" "),a("h3",{attrs:{id:"_1-多态的向上转型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-多态的向上转型"}},[s._v("#")]),s._v(" (1)多态的向上转型")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("poly_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Wine")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("JNC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Wine")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Wine 的Fun....."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Wine 的Fun2..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" JNC "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Wine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @desc 子类重载父类方法\n     *        父类中不存在该方法，向上转型后，父类是不能引用该方法的\n     * @param a\n     * @return void\n     */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"JNC 的 Fun1..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 子类重写父类方法\n     * 指向子类的父类引用调用fun2时，必定是调用该方法\n     */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fun2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"JNC 的Fun2..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("输出结果")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Wine 的Fun.....\nJNC 的Fun2...\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这里的子类JNC没有fun1()方法，所以向上找，实现的是父类的fun1()方法。")]),s._v(" "),a("p",[a("strong",[s._v("几点总结")]),s._v("：")]),s._v(" "),a("ol",[a("li",[s._v("指向子类的父类引用由于向上转型，就只能访问父类中拥有的方法和属性。")]),s._v(" "),a("li",[s._v("子类中存在，但是父类中不存在(包括重载)，这个方法也不能使用。")]),s._v(" "),a("li",[s._v("若是子类重写了父类中的某些方法，在调用该方法的时候，先使用子类的，子类中没有，才向上找，使用父类中的此方法。")])])]),s._v(" "),a("h3",{attrs:{id:"_2-java的动态绑定机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-java的动态绑定机制"}},[s._v("#")]),s._v(" (2)Java的动态绑定机制")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GraduateStudent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建GraduateStudent的实例并运用m方法")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建Student的实例并运用m方法")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建Person的实例并运用m方法")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建Object的实例并运用m方法")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//m方法，输出对象的toString表示")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GraduateStudent")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//GraduateStudent类继承Student类")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Student")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Student类继承Person类")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Student"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Person类继承Object类")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Person"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("h3",{attrs:{id:"_3-抽象类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-抽象类"}},[s._v("#")]),s._v(" (3)抽象类")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code")]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"})]),a("h3",{attrs:{id:"_4-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-接口"}},[s._v("#")]),s._v(" (4)接口")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_5-内部类-重点关注一下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-内部类-重点关注一下"}},[s._v("#")]),s._v(" (5)内部类(重点关注一下)")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ---------------------------------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -----------------------匿名内部类例1-----------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ---------------------------------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hspedu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("customerclass_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("arrays_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Arrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArraysMethod01")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("89")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//        Arrays.sort(arr);")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Arrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sort方法可以通过传入一个接口实现定制排序")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 匿名内部类")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用定制排序时，传入两个参数：")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ①排序的数组")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ②实现了compare接口的匿名内部类")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个接口里面需要实现compare方法")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里体现的是一种接口编程的方式")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在binarySort方法底层，会通过匿名内部类的compare方法来决定排序的一个顺序")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ===========总结============")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.先走sort方法 2.再到TimSort类的binarySort()方法")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.执行到binarySort()方法的代码：根据动态绑定机制，")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// c.compaer()执行我们传入的匿名内部类的compare()方法")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4.new Comparator() {")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//            @Override")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//            public int compare(Object o1, Object o2) {")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//                Integer i1 = (Integer) o1;")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//                Integer i2 = (Integer) o2;")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//                return i2 - i1;")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//            }")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//        }")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5.public int compare(Object o1, Object o2) 方法的值会影响整个排序结果")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 充分体现了接口编程，匿名内部类的综合使用")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Arrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" o1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" o2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" i2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" i1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Arrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br")])]),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接：")]),s._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://www.pdai.tech/md/java/basic/java-basic-oop.html#%E5%A4%9A%E6%80%81",target:"_blank",rel:"noopener noreferrer"}},[s._v("多态-pdai博客"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.runoob.com/java/java-override-overload.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("重写与重载 -- 菜鸟教程"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/chenssy/p/3372798.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("理解java的三大特性之多态"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_42247720/article/details/80450238",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java中的动态绑定"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/justloveyou_/article/details/72466416",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入理解Java对象的创建过程：类的初始化与实例化"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);