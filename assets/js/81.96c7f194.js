(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{826:function(t,a,v){"use strict";v.r(a);var _=v(7),i=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("strong",[t._v("设计模式概述")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("每个模式都描述了一个在我们的环境中不断出现的问题，然后描述了该问题的解决方案的核心，通过这种方式，我们可以无数次地重用那些已有的成功的解决方案，无须再重复相同的工作。这个定义可以简单地用一句话表示："),v("u",[t._v("模式是在特定环境下人们解决某类重复出现问题的一套成功或有效的解决方案")]),t._v("。")])]),t._v(" "),v("li",[v("p",[v("u",[t._v("软件模式是在软件开发中某些可重现问题的一些有效解决方法")]),t._v("，软件模式的基础结构主要由四部分构成，包括问题描述【待解决的问题是什么】、前提条件【在何种环境或约束条件下使用】、解法【如何解决】和效果【有哪些优缺点】：\n"),v("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220223083533372.png"}})])]),t._v(" "),v("li",[v("p",[v("u",[t._v("设计模式用于在特定的条件下为一些重复出现的软件设计问题提供合理的、有效的解决方案")]),t._v("。")])]),t._v(" "),v("li",[v("p",[t._v("设计模式(Design Pattern)是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结，使用设计模式是为了可重用代码、让代码更容易被他人理解并且保证代码可靠性。")])]),t._v(" "),v("li",[v("p",[t._v("根据它们的用途，"),v("u",[t._v("设计模式可分为创建型(Creational)，结构型(Structural)和行为型(Behavioral)三种")]),t._v("，其中"),v("u",[t._v("创建型模式")]),t._v("主要用于描述如何创建对象，"),v("u",[t._v("结构型模式")]),t._v("主要用于描述如何实现类或对象的组合，"),v("u",[t._v("行为型模式")]),t._v("主要用于描述类或对象怎样交互以及怎样分配职责，在GoF 23种设计模式中包含5种创建型设计模式、7种结构型设计模式和11种行为型设计模式。")])]),t._v(" "),v("li",[v("p",[t._v("设计模式的使用频率和难度：")]),t._v(" "),v("center",[v("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220223084303102.png",alt:"image-20220223084303102"}})]),t._v(" "),v("center",[v("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220223084329943.png",alt:"image-20220223084329943"}})]),t._v(" "),v("center",[v("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\hp\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220223084459712.png",alt:"image-20220223084459712"}})])],1),t._v(" "),v("li",[v("p",[t._v("设计模式有什么用：")]),t._v(" "),v("ul",[v("li",[t._v("提升开发和设计效率：它们是从许多优秀的软件系统中总结出的成功的、能够实现可维护性复用的设计方案，使用这些方案将可以让我们避免做一些重复性的工作。设计模式无疑会为有助于我们提高开发和设计效率，但它不保证一定会提高。")]),t._v(" "),v("li",[t._v("便于沟通和交流：设计模式提供了一套通用的设计词汇和一种通用的形式来方便开发人员之间沟通和交流，使得设计方案更加通俗易懂。")]),t._v(" "),v("li",[t._v("灵活性和可拓展性")]),t._v(" "),v("li",[t._v("有助于别人理解系统：合理使用设计模式并对设计模式的使用情况进行文档化，将有助于别人更快地理解系统。")]),t._v(" "),v("li",[t._v("学习设计模式将有助于初学者更加深入地理解面向对象思想，")])])]),t._v(" "),v("li",[v("p",[t._v("一些经验：")]),t._v(" "),v("ul",[v("li",[t._v("在学习每一个设计模式时至少应该掌握如下几点：这个设计模式的意图是什么，它要解决一个什么问题，什么时候可以使用它；它是如何解决的，掌握它的结构图，记住它的关键代码；能够想到至少两个它的应用实例，一个生活中的，一个软件中的；这个模式的优缺点是什么，在使用时要注意什么。至于掌握，就在开发中去使用。")]),t._v(" "),v("li",[t._v("如果想体验一下运用模式的感觉，那么最好的方法就是运用它们。设计模式是“内功心法”，它还是要与“实战招式”相结合才能够相得益彰。")]),t._v(" "),v("li",[t._v("千万不要滥用模式，不要试图在一个系统中用上所有的模式。")]),t._v(" "),v("li",[t._v("手中无模式，心中有模式。")]),t._v(" "),v("li",[t._v("模式从不保证任何东西，它不能保证你一定能够做出可复用的软件，提高你的生产率。")])])])])])}),[],!1,null,null,null);a.default=i.exports}}]);